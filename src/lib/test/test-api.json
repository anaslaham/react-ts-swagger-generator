{
  "openapi": "3.0.1",
  "info": {
    "title": "NuclearMedicine API - Reports & Notifications & Messages",
    "description": "Web API endpoints for Reports & Notifications & Messages",
    "version": "v1"
  },
  "paths": {
    "/api/services/app/Message/GetAllAdmins": {
      "get": {
        "tags": ["Message"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/GetAllPatients": {
      "get": {
        "tags": ["Message"],
        "parameters": [
          {
            "name": "supervisoryDoctorUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/GetAllSupervisoryDoctors": {
      "get": {
        "tags": ["Message"],
        "parameters": [
          {
            "name": "patientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueLabelDtoListResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/GetAll": {
      "get": {
        "tags": ["Message"],
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Object",
            "in": "query",
            "description": "Message Object:\r\n1- Consultation\r\n2- Emergency\r\n3- Complaint\r\n4- Requirement\r\n5- Notice\r\n6- Appointment Cancellation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "0- UnRead\r\n1- Read",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/GetAllMyMessages": {
      "get": {
        "tags": ["Message"],
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Object",
            "in": "query",
            "description": "Message Object:\r\n1- Consultation\r\n2- Emergency\r\n3- Complaint\r\n4- Requirement\r\n5- Notice\r\n6- Appointment Cancellation",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "State",
            "in": "query",
            "description": "0- UnRead\r\n1- Read",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDtoPagedResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/Get": {
      "get": {
        "tags": ["Message"],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/Create": {
      "post": {
        "tags": ["Message"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/Reply": {
      "post": {
        "tags": ["Message"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Message/GetNumberOfUnReadMessages": {
      "get": {
        "tags": ["Message"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/GetUserNotifications": {
      "get": {
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "description": "State: 0- Unread, 1- Read",
            "schema": {
              "enum": [0, 1],
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoPagedResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/GetNumberOfUnReadUserNotifications": {
      "get": {
        "tags": ["Notification"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/MarkNotificationAsRead": {
      "post": {
        "tags": ["Notification"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuidEntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/TestNotifyUsers": {
      "post": {
        "tags": ["Notification"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TestNotificationInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestNotificationInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestNotificationInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestNotificationInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PostCategory/Get": {
      "get": {
        "tags": ["PostCategory"],
        "summary": "Get PostCategory Details ById",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PostCategory/GetAll": {
      "get": {
        "tags": ["PostCategory"],
        "summary": "Get All Post Categories Details",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostCategoryDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostCategoryDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostCategoryDtoPagedResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PostCategory/Create": {
      "post": {
        "tags": ["PostCategory"],
        "summary": "Add New Post Category Details",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PostCategory/Update": {
      "put": {
        "tags": ["PostCategory"],
        "summary": "Update Post Category Details",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PostCategory/Delete": {
      "delete": {
        "tags": ["PostCategory"],
        "summary": "Delete Post Category Details",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PostCategory/SwitchActivation": {
      "put": {
        "tags": ["PostCategory"],
        "summary": "Switch Activation Of A Post Category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostCategorySwitchActivationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCategorySwitchActivationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCategorySwitchActivationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostCategorySwitchActivationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCategoryDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Posts/Get": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get Post Details ById",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Posts/GetAll": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get All Posts Details",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostsDtoPagedResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostsDtoPagedResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LitePostsDtoPagedResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Posts/Create": {
      "post": {
        "tags": ["Posts"],
        "summary": "Add New Post Details",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Posts/Update": {
      "put": {
        "tags": ["Posts"],
        "summary": "Update Post Details",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Posts/Delete": {
      "delete": {
        "tags": ["Posts"],
        "summary": "Delete Post Details",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Posts/SwitchActivation": {
      "put": {
        "tags": ["Posts"],
        "summary": "Switch Activation Of A Post",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostsSwitchActivationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostsSwitchActivationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostsSwitchActivationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostsSwitchActivationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostsDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/Authenticate": {
      "post": {
        "tags": ["TokenAuth"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/GetExternalAuthenticationProviders": {
      "get": {
        "tags": ["TokenAuth"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/ExternalAuthenticate": {
      "post": {
        "tags": ["TokenAuth"],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticateModel": {
        "required": ["password", "rememberClient", "userNameOrEmailAddress"],
        "type": "object",
        "properties": {
          "userNameOrEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "rememberClient": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResultModel": {
        "required": ["expireInSeconds", "userId"],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMessageInputDto": {
        "required": ["description", "object", "toUserId"],
        "type": "object",
        "properties": {
          "toUserId": {
            "type": "integer",
            "format": "int64"
          },
          "object": {
            "type": "integer",
            "description": "Message Object:\r\n1- Consultation\r\n2- Emergency\r\n3- Complaint\r\n4- Requirement\r\n5- Notice\r\n6- Appointment Cancellation",
            "format": "int32"
          },
          "title": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePostCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePostsDto": {
        "required": ["postCategoryId"],
        "type": "object",
        "properties": {
          "arTitle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enTitle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arDescription": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enDescription": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateModel": {
        "required": ["authProvider", "providerAccessCode", "providerKey"],
        "type": "object",
        "properties": {
          "authProvider": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "providerKey": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "providerAccessCode": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateResultModel": {
        "required": ["expireInSeconds", "waitingForActivation"],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "waitingForActivation": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginProviderInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GuidEntityDto": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "LiteAttachmentDto": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LiteEntityDto": {
        "required": ["value"],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LitePostCategoryDto": {
        "required": ["id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LitePostCategoryDtoPagedResultDto": {
        "required": ["totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LitePostCategoryDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LitePostsDto": {
        "required": ["creationTime", "id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "arTitle": {
            "type": "string",
            "nullable": true
          },
          "enTitle": {
            "type": "string",
            "nullable": true
          },
          "arDescription": {
            "type": "string",
            "nullable": true
          },
          "enDescription": {
            "type": "string",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "postCategory": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LitePostsDtoPagedResultDto": {
        "required": ["totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LitePostsDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageDetailsDto": {
        "required": ["creationTime", "id", "object", "state", "type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fromUser": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "toUser": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "object": {
            "type": "integer",
            "description": "Message Object:\r\n1- Consultation\r\n2- Emergency\r\n3- Complaint\r\n4- Requirement\r\n5- Notice\r\n6- Appointment Cancellation",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "integer",
            "description": "0- UnRead\r\n1- Read",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "1- Basic\r\n2- Replay",
            "format": "int32"
          },
          "relatedMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDetailsDto"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiteAttachmentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageDto": {
        "required": [
          "creationTime",
          "id",
          "object",
          "relatedMessageCount",
          "state",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fromUser": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "toUser": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "object": {
            "type": "integer",
            "description": "Message Object:\r\n1- Consultation\r\n2- Emergency\r\n3- Complaint\r\n4- Requirement\r\n5- Notice\r\n6- Appointment Cancellation",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "integer",
            "description": "0- UnRead\r\n1- Read",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "1- Basic\r\n2- Replay",
            "format": "int32"
          },
          "relatedMessageCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastRelatedMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageDtoPagedResultDto": {
        "required": ["totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationDto": {
        "required": ["dateTime", "id", "state", "type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "notificationName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [1, 2, 3, 4, 5, 6, 7],
            "type": "integer",
            "description": "Type of Notification:\r\n1",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "relatedId": {
            "type": "integer",
            "description": "Id of related entity if exists. Depending on Type of the notification:",
            "format": "int64",
            "nullable": true
          },
          "state": {
            "enum": [0, 1],
            "type": "integer",
            "description": "State: 0- Unread, 1- Read",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoPagedResultDto": {
        "required": ["totalCount"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PostCategoryDetailsDto": {
        "required": ["id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PostCategorySwitchActivationDto": {
        "required": ["id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PostsDetailsDto": {
        "required": ["creationTime", "id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "arTitle": {
            "type": "string",
            "nullable": true
          },
          "enTitle": {
            "type": "string",
            "nullable": true
          },
          "arDescription": {
            "type": "string",
            "nullable": true
          },
          "enDescription": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "postCategory": {
            "$ref": "#/components/schemas/LiteEntityDto"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PostsSwitchActivationDto": {
        "required": ["id", "isActive"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReplyMessageInputDto": {
        "required": ["messageId"],
        "type": "object",
        "properties": {
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestNotificationInputDto": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "relatedId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [1, 2, 3, 4, 5, 6, 7],
            "type": "integer",
            "description": "Type of Notification:\r\n1 - 7",
            "format": "int32"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePostCategoryDto": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdatePostsDto": {
        "required": ["id", "postCategoryId"],
        "type": "object",
        "properties": {
          "arTitle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enTitle": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "arDescription": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "enDescription": {
            "maxLength": 1500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ValueLabelDto": {
        "required": ["value"],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValueLabelDtoListResultDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueLabelDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
