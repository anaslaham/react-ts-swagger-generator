{
  "outOfModule": [
    {
      "moduleName": "",
      "security": false,
      "hasQuery": false,
      "hasFormDataParams": false,
      "queryType": "{}",
      "bodyType": "AuthenticateModel",
      "name": "authenticate",
      "pascalName": "Authenticate",
      "comments": [
        "@tags TokenAuth",
        "@name authenticate",
        "@request POST:/api/TokenAuth/Authenticate"
      ],
      "routeArgs": [
        { "name": "data", "optional": false, "type": "AuthenticateModel" },
        { "name": "params", "optional": true, "type": "any" }
      ],
      "specificArgs": {
        "body": {
          "name": "data",
          "optional": false,
          "type": "AuthenticateModel"
        },
        "requestParams": { "name": "params", "optional": true, "type": "any" }
      },
      "method": "post",
      "path": "/api/TokenAuth/Authenticate",
      "returnType": "AuthenticateResultModel",
      "dependences": ["AuthenticateModel", "AuthenticateResultModel"],
      "errorReturnType": "any",
      "bodyArg": "data"
    }
  ],
  "combined": [
    {
      "moduleName": "Account",
      "objName": "account",
      "routes": [
        {
          "moduleName": "account",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "RegisterInput",
          "name": "accountRegister",
          "pascalName": "AccountRegister",
          "comments": [
            "@tags Account",
            "@name accountRegister",
            "@request POST:/api/services/app/Account/Register"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "RegisterInput" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "RegisterInput"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Account/Register",
          "returnType": "RegisterOutput",
          "dependences": ["RegisterInput", "RegisterOutput"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "account",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "RegisterDesignerInput",
          "name": "accountRegisterDesigner",
          "pascalName": "AccountRegisterDesigner",
          "comments": [
            "@tags Account",
            "@name accountRegisterDesigner",
            "@request POST:/api/services/app/Account/RegisterDesigner"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "RegisterDesignerInput"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "RegisterDesignerInput"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Account/RegisterDesigner",
          "returnType": "RegisterOutput",
          "dependences": ["RegisterDesignerInput", "RegisterOutput"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "account",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ChangeUserLanguageDto",
          "name": "accountChangeLanguage",
          "pascalName": "AccountChangeLanguage",
          "comments": [
            "@tags Account",
            "@name accountChangeLanguage",
            "@request POST:/api/services/app/Account/ChangeLanguage"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "ChangeUserLanguageDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ChangeUserLanguageDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Account/ChangeLanguage",
          "returnType": "any",
          "dependences": ["ChangeUserLanguageDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "account",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ChangePasswordDto",
          "name": "accountChangePassword",
          "pascalName": "AccountChangePassword",
          "comments": [
            "@tags Account",
            "@name accountChangePassword",
            "@request POST:/api/services/app/Account/ChangePassword"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ChangePasswordDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ChangePasswordDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Account/ChangePassword",
          "returnType": "boolean",
          "dependences": ["ChangePasswordDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        }
      ],
      "dependences": [
        "RegisterInput",
        "RegisterOutput",
        "RegisterDesignerInput",
        "ChangeUserLanguageDto",
        "ChangePasswordDto"
      ]
    },
    {
      "moduleName": "Category",
      "objName": "category",
      "routes": [
        {
          "moduleName": "category",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "categoryGet",
          "pascalName": "CategoryGet",
          "comments": [
            "@tags Category",
            "@name categoryGet",
            "@request GET:/api/services/app/Category/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Category/Get",
          "returnType": "CategoryDto",
          "dependences": ["CategoryDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "category",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateCategoryDto",
          "name": "categoryCreate",
          "pascalName": "CategoryCreate",
          "comments": [
            "@tags Category",
            "@name categoryCreate",
            "@request POST:/api/services/app/Category/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateCategoryDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateCategoryDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Category/Create",
          "returnType": "CategoryDto",
          "dependences": ["CreateCategoryDto", "CategoryDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "category",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateCategoryDto",
          "name": "categoryUpdate",
          "pascalName": "CategoryUpdate",
          "comments": [
            "@tags Category",
            "@name categoryUpdate",
            "@request PUT:/api/services/app/Category/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateCategoryDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateCategoryDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Category/Update",
          "returnType": "CategoryDto",
          "dependences": ["UpdateCategoryDto", "CategoryDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "category",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "categoryGetAll",
          "pascalName": "CategoryGetAll",
          "comments": [
            "@tags Category",
            "@name categoryGetAll",
            "@request GET:/api/services/app/Category/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Category/GetAll",
          "returnType": "CategoryDtoPagedResultDto",
          "dependences": ["CategoryDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "category",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "categoryDelete",
          "pascalName": "CategoryDelete",
          "comments": [
            "@tags Category",
            "@name categoryDelete",
            "@request DELETE:/api/services/app/Category/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Category/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "CategoryDto",
        "CreateCategoryDto",
        "UpdateCategoryDto",
        "CategoryDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "City",
      "objName": "city",
      "routes": [
        {
          "moduleName": "city",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ CountryId?: number | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "cityGetAll",
          "pascalName": "CityGetAll",
          "comments": [
            "@tags City",
            "@name cityGetAll",
            "@request GET:/api/services/app/City/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ CountryId?: number | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ CountryId?: number | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/City/GetAll",
          "returnType": "CityDtoPagedResultDto",
          "dependences": ["CityDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": ["CityDtoPagedResultDto"]
    },
    {
      "moduleName": "Color",
      "objName": "color",
      "routes": [
        {
          "moduleName": "color",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "colorGet",
          "pascalName": "ColorGet",
          "comments": [
            "@tags Color",
            "@name colorGet",
            "@request GET:/api/services/app/Color/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Color/Get",
          "returnType": "ColorDto",
          "dependences": ["ColorDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "color",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "colorGetAll",
          "pascalName": "ColorGetAll",
          "comments": [
            "@tags Color",
            "@name colorGetAll",
            "@request GET:/api/services/app/Color/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Color/GetAll",
          "returnType": "ColorDtoPagedResultDto",
          "dependences": ["ColorDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "color",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateColorDto",
          "name": "colorCreate",
          "pascalName": "ColorCreate",
          "comments": [
            "@tags Color",
            "@name colorCreate",
            "@request POST:/api/services/app/Color/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateColorDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateColorDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Color/Create",
          "returnType": "ColorDto",
          "dependences": ["CreateColorDto", "ColorDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "color",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateColorDto",
          "name": "colorUpdate",
          "pascalName": "ColorUpdate",
          "comments": [
            "@tags Color",
            "@name colorUpdate",
            "@request PUT:/api/services/app/Color/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateColorDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateColorDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Color/Update",
          "returnType": "ColorDto",
          "dependences": ["UpdateColorDto", "ColorDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "color",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "colorDelete",
          "pascalName": "ColorDelete",
          "comments": [
            "@tags Color",
            "@name colorDelete",
            "@request DELETE:/api/services/app/Color/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Color/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "ColorDto",
        "ColorDtoPagedResultDto",
        "CreateColorDto",
        "UpdateColorDto"
      ]
    },
    {
      "moduleName": "Configuration",
      "objName": "configuration",
      "routes": [
        {
          "moduleName": "configuration",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ChangeUserCurrencyInput",
          "name": "configurationChangeUserCurrency",
          "pascalName": "ConfigurationChangeUserCurrency",
          "comments": [
            "@tags Configuration",
            "@name configurationChangeUserCurrency",
            "@request POST:/api/services/app/Configuration/ChangeUserCurrency"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "ChangeUserCurrencyInput"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ChangeUserCurrencyInput"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Configuration/ChangeUserCurrency",
          "returnType": "any",
          "dependences": ["ChangeUserCurrencyInput"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "configuration",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ChangeUserLanguageInput",
          "name": "configurationChangeUserLanguage",
          "pascalName": "ConfigurationChangeUserLanguage",
          "comments": [
            "@tags Configuration",
            "@name configurationChangeUserLanguage",
            "@request POST:/api/services/app/Configuration/ChangeUserLanguage"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "ChangeUserLanguageInput"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ChangeUserLanguageInput"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Configuration/ChangeUserLanguage",
          "returnType": "any",
          "dependences": ["ChangeUserLanguageInput"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "configuration",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "configurationGetSettings",
          "pascalName": "ConfigurationGetSettings",
          "comments": [
            "@tags Configuration",
            "@name configurationGetSettings",
            "@request GET:/api/services/app/Configuration/GetSettings"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Configuration/GetSettings",
          "returnType": "(SettingDto)[]",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": ["ChangeUserCurrencyInput", "ChangeUserLanguageInput"]
    },
    {
      "moduleName": "Consumer",
      "objName": "consumer",
      "routes": [
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "EntityDto",
          "name": "consumerSwitchActivation",
          "pascalName": "ConsumerSwitchActivation",
          "comments": [
            "@tags Consumer",
            "@name consumerSwitchActivation",
            "@request PUT:/api/services/app/Consumer/SwitchActivation"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "EntityDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": { "name": "data", "optional": false, "type": "EntityDto" },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Consumer/SwitchActivation",
          "returnType": "any",
          "dependences": ["EntityDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "consumerGetProfile",
          "pascalName": "ConsumerGetProfile",
          "comments": [
            "@tags Consumer",
            "@name consumerGetProfile",
            "@request GET:/api/services/app/Consumer/GetProfile"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Consumer/GetProfile",
          "returnType": "ConsumerProfileDto",
          "dependences": ["ConsumerProfileDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ConsumerProfileInputDto",
          "name": "consumerUpdateProfile",
          "pascalName": "ConsumerUpdateProfile",
          "comments": [
            "@tags Consumer",
            "@name consumerUpdateProfile",
            "@request PUT:/api/services/app/Consumer/UpdateProfile"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "ConsumerProfileInputDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ConsumerProfileInputDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Consumer/UpdateProfile",
          "returnType": "ConsumerProfileDto",
          "dependences": ["ConsumerProfileInputDto", "ConsumerProfileDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ConsumerAddressInputDto",
          "name": "consumerUpdateAddress",
          "pascalName": "ConsumerUpdateAddress",
          "comments": [
            "@tags Consumer",
            "@name consumerUpdateAddress",
            "@request PUT:/api/services/app/Consumer/UpdateAddress"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "ConsumerAddressInputDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ConsumerAddressInputDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Consumer/UpdateAddress",
          "returnType": "ConsumerAddressDto",
          "dependences": ["ConsumerAddressInputDto", "ConsumerAddressDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "consumerGet",
          "pascalName": "ConsumerGet",
          "comments": [
            "@tags Consumer",
            "@name consumerGet",
            "@request GET:/api/services/app/Consumer/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Consumer/Get",
          "returnType": "ConsumerDto",
          "dependences": ["ConsumerDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "consumerGetAll",
          "pascalName": "ConsumerGetAll",
          "comments": [
            "@tags Consumer",
            "@name consumerGetAll",
            "@request GET:/api/services/app/Consumer/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Consumer/GetAll",
          "returnType": "ConsumerDtoPagedResultDto",
          "dependences": ["ConsumerDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "consumer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "consumerDelete",
          "pascalName": "ConsumerDelete",
          "comments": [
            "@tags Consumer",
            "@name consumerDelete",
            "@request DELETE:/api/services/app/Consumer/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Consumer/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "EntityDto",
        "ConsumerProfileDto",
        "ConsumerProfileInputDto",
        "ConsumerAddressInputDto",
        "ConsumerAddressDto",
        "ConsumerDto",
        "ConsumerDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Country",
      "objName": "country",
      "routes": [
        {
          "moduleName": "country",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "countryGetAll",
          "pascalName": "CountryGetAll",
          "comments": [
            "@tags Country",
            "@name countryGetAll",
            "@request GET:/api/services/app/Country/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Country/GetAll",
          "returnType": "CountryDtoPagedResultDto",
          "dependences": ["CountryDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": ["CountryDtoPagedResultDto"]
    },
    {
      "moduleName": "Coupon",
      "objName": "coupon",
      "routes": [
        {
          "moduleName": "coupon",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateCouponDto",
          "name": "couponCreate",
          "pascalName": "CouponCreate",
          "comments": [
            "@tags Coupon",
            "@name couponCreate",
            "@request POST:/api/services/app/Coupon/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateCouponDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateCouponDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Coupon/Create",
          "returnType": "CouponDto",
          "dependences": ["CreateCouponDto", "CouponDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "coupon",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateCouponDto",
          "name": "couponUpdate",
          "pascalName": "CouponUpdate",
          "comments": [
            "@tags Coupon",
            "@name couponUpdate",
            "@request PUT:/api/services/app/Coupon/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateCouponDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateCouponDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Coupon/Update",
          "returnType": "CouponDto",
          "dependences": ["UpdateCouponDto", "CouponDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "coupon",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "couponGet",
          "pascalName": "CouponGet",
          "comments": [
            "@tags Coupon",
            "@name couponGet",
            "@request GET:/api/services/app/Coupon/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Coupon/Get",
          "returnType": "CouponDto",
          "dependences": ["CouponDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "coupon",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "couponGetAll",
          "pascalName": "CouponGetAll",
          "comments": [
            "@tags Coupon",
            "@name couponGetAll",
            "@request GET:/api/services/app/Coupon/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Coupon/GetAll",
          "returnType": "CouponDtoPagedResultDto",
          "dependences": ["CouponDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "coupon",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "couponDelete",
          "pascalName": "CouponDelete",
          "comments": [
            "@tags Coupon",
            "@name couponDelete",
            "@request DELETE:/api/services/app/Coupon/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Coupon/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "CreateCouponDto",
        "CouponDto",
        "UpdateCouponDto",
        "CouponDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Designer",
      "objName": "designer",
      "routes": [
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "EntityDto",
          "name": "designerSwitchActivation",
          "pascalName": "DesignerSwitchActivation",
          "comments": [
            "@tags Designer",
            "@name designerSwitchActivation",
            "@request PUT:/api/services/app/Designer/SwitchActivation"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "EntityDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": { "name": "data", "optional": false, "type": "EntityDto" },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Designer/SwitchActivation",
          "returnType": "any",
          "dependences": ["EntityDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "Int64EntityDto",
          "name": "designerSwitchCollaboration",
          "pascalName": "DesignerSwitchCollaboration",
          "comments": [
            "@tags Designer",
            "@name designerSwitchCollaboration",
            "@request POST:/api/services/app/Designer/SwitchCollaboration"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "Int64EntityDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "Int64EntityDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Designer/SwitchCollaboration",
          "returnType": "any",
          "dependences": ["Int64EntityDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "designerGetProfile",
          "pascalName": "DesignerGetProfile",
          "comments": [
            "@tags Designer",
            "@name designerGetProfile",
            "@request GET:/api/services/app/Designer/GetProfile"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Designer/GetProfile",
          "returnType": "DesignerDto",
          "dependences": ["DesignerDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "DesignerProfileInputDto",
          "name": "designerUpdateProfile",
          "pascalName": "DesignerUpdateProfile",
          "comments": [
            "@tags Designer",
            "@name designerUpdateProfile",
            "@request PUT:/api/services/app/Designer/UpdateProfile"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "DesignerProfileInputDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "DesignerProfileInputDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Designer/UpdateProfile",
          "returnType": "DesignerDto",
          "dependences": ["DesignerProfileInputDto", "DesignerDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "designerUpdateLogo",
          "pascalName": "DesignerUpdateLogo",
          "comments": [
            "@tags Designer",
            "@name designerUpdateLogo",
            "@request PUT:/api/services/app/Designer/UpdateLogo"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Designer/UpdateLogo",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "designerUpdateBackgroundImage",
          "pascalName": "DesignerUpdateBackgroundImage",
          "comments": [
            "@tags Designer",
            "@name designerUpdateBackgroundImage",
            "@request PUT:/api/services/app/Designer/UpdateBackgroundImage"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Designer/UpdateBackgroundImage",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "designerRemoveLogo",
          "pascalName": "DesignerRemoveLogo",
          "comments": [
            "@tags Designer",
            "@name designerRemoveLogo",
            "@request DELETE:/api/services/app/Designer/RemoveLogo"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Designer/RemoveLogo",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "designerRemoveBackgroundImage",
          "pascalName": "DesignerRemoveBackgroundImage",
          "comments": [
            "@tags Designer",
            "@name designerRemoveBackgroundImage",
            "@request DELETE:/api/services/app/Designer/RemoveBackgroundImage"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Designer/RemoveBackgroundImage",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "designerGet",
          "pascalName": "DesignerGet",
          "comments": [
            "@tags Designer",
            "@name designerGet",
            "@request GET:/api/services/app/Designer/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Designer/Get",
          "returnType": "DesignerDto",
          "dependences": ["DesignerDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "designerGetAll",
          "pascalName": "DesignerGetAll",
          "comments": [
            "@tags Designer",
            "@name designerGetAll",
            "@request GET:/api/services/app/Designer/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Designer/GetAll",
          "returnType": "DesignerDtoPagedResultDto",
          "dependences": ["DesignerDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "designer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "designerDelete",
          "pascalName": "DesignerDelete",
          "comments": [
            "@tags Designer",
            "@name designerDelete",
            "@request DELETE:/api/services/app/Designer/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Designer/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "EntityDto",
        "Int64EntityDto",
        "DesignerDto",
        "DesignerProfileInputDto",
        "ImageUrlDto",
        "DesignerDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Fabric",
      "objName": "fabric",
      "routes": [
        {
          "moduleName": "fabric",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "fabricGet",
          "pascalName": "FabricGet",
          "comments": [
            "@tags Fabric",
            "@name fabricGet",
            "@request GET:/api/services/app/Fabric/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Fabric/Get",
          "returnType": "FabricDto",
          "dependences": ["FabricDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "fabric",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "fabricGetAll",
          "pascalName": "FabricGetAll",
          "comments": [
            "@tags Fabric",
            "@name fabricGetAll",
            "@request GET:/api/services/app/Fabric/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Fabric/GetAll",
          "returnType": "FabricDtoPagedResultDto",
          "dependences": ["FabricDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "fabric",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateFabricDto",
          "name": "fabricCreate",
          "pascalName": "FabricCreate",
          "comments": [
            "@tags Fabric",
            "@name fabricCreate",
            "@request POST:/api/services/app/Fabric/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateFabricDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateFabricDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Fabric/Create",
          "returnType": "FabricDto",
          "dependences": ["CreateFabricDto", "FabricDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "fabric",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateFabricDto",
          "name": "fabricUpdate",
          "pascalName": "FabricUpdate",
          "comments": [
            "@tags Fabric",
            "@name fabricUpdate",
            "@request PUT:/api/services/app/Fabric/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateFabricDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateFabricDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Fabric/Update",
          "returnType": "FabricDto",
          "dependences": ["UpdateFabricDto", "FabricDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "fabric",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "fabricDelete",
          "pascalName": "FabricDelete",
          "comments": [
            "@tags Fabric",
            "@name fabricDelete",
            "@request DELETE:/api/services/app/Fabric/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Fabric/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "FabricDto",
        "FabricDtoPagedResultDto",
        "CreateFabricDto",
        "UpdateFabricDto"
      ]
    },
    {
      "moduleName": "Image",
      "objName": "image",
      "routes": [
        {
          "moduleName": "image",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": true,
          "queryType": "{}",
          "bodyType": "{ File: File, Type: number }",
          "name": "imageUploadImage",
          "pascalName": "ImageUploadImage",
          "comments": [
            "@tags Image",
            "@name imageUploadImage",
            "@summary Upload single image, and return Url.",
            "@request POST:/api/services/app/Image/UploadImage"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "{ File: File, Type: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "{ File: File, Type: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Image/UploadImage",
          "returnType": "ItemImageDto",
          "dependences": ["ItemImageDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        }
      ],
      "dependences": ["ItemImageDto"]
    },
    {
      "moduleName": "Model",
      "objName": "model",
      "routes": [
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "modelGetMyProfile",
          "pascalName": "ModelGetMyProfile",
          "comments": [
            "@tags Model",
            "@name modelGetMyProfile",
            "@request GET:/api/services/app/Model/GetMyProfile"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Model/GetMyProfile",
          "returnType": "ModelDto",
          "dependences": ["ModelDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "modelGet",
          "pascalName": "ModelGet",
          "comments": [
            "@tags Model",
            "@name modelGet",
            "@request GET:/api/services/app/Model/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Model/Get",
          "returnType": "ModelDto",
          "dependences": ["ModelDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "modelUpdateMyImage",
          "pascalName": "ModelUpdateMyImage",
          "comments": [
            "@tags Model",
            "@name modelUpdateMyImage",
            "@request PUT:/api/services/app/Model/UpdateMyImage"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Model/UpdateMyImage",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateModelDto",
          "name": "modelUpdateMyProfile",
          "pascalName": "ModelUpdateMyProfile",
          "comments": [
            "@tags Model",
            "@name modelUpdateMyProfile",
            "@request PUT:/api/services/app/Model/UpdateMyProfile"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateModelDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateModelDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Model/UpdateMyProfile",
          "returnType": "ModelDto",
          "dependences": ["UpdateModelDto", "ModelDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "AddClientDto",
          "name": "modelAddClient",
          "pascalName": "ModelAddClient",
          "comments": [
            "@tags Model",
            "@name modelAddClient",
            "@request POST:/api/services/app/Model/AddClient"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "AddClientDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "AddClientDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Model/AddClient",
          "returnType": "any",
          "dependences": ["AddClientDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Name?: string | null }",
          "bodyType": null,
          "name": "modelRemoveClient",
          "pascalName": "ModelRemoveClient",
          "comments": [
            "@tags Model",
            "@name modelRemoveClient",
            "@request DELETE:/api/services/app/Model/RemoveClient"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Name?: string | null }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Name?: string | null }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Model/RemoveClient",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "modelAddPortfolioImage",
          "pascalName": "ModelAddPortfolioImage",
          "comments": [
            "@tags Model",
            "@name modelAddPortfolioImage",
            "@request POST:/api/services/app/Model/AddPortfolioImage"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Model/AddPortfolioImage",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ ImageUrl: string }",
          "bodyType": null,
          "name": "modelRemovePortfolioImage",
          "pascalName": "ModelRemovePortfolioImage",
          "comments": [
            "@tags Model",
            "@name modelRemovePortfolioImage",
            "@request DELETE:/api/services/app/Model/RemovePortfolioImage"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": false,
              "type": "{ ImageUrl: string }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": false,
              "type": "{ ImageUrl: string }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Model/RemovePortfolioImage",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "modelGetAll",
          "pascalName": "ModelGetAll",
          "comments": [
            "@tags Model",
            "@name modelGetAll",
            "@request GET:/api/services/app/Model/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Model/GetAll",
          "returnType": "ModelDtoPagedResultDto",
          "dependences": ["ModelDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "model",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "modelDelete",
          "pascalName": "ModelDelete",
          "comments": [
            "@tags Model",
            "@name modelDelete",
            "@request DELETE:/api/services/app/Model/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Model/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "ModelDto",
        "ImageUrlDto",
        "UpdateModelDto",
        "AddClientDto",
        "ModelDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Photographer",
      "objName": "photographer",
      "routes": [
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "photographerGetMyProfile",
          "pascalName": "PhotographerGetMyProfile",
          "comments": [
            "@tags Photographer",
            "@name photographerGetMyProfile",
            "@request GET:/api/services/app/Photographer/GetMyProfile"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Photographer/GetMyProfile",
          "returnType": "PhotographerDto",
          "dependences": ["PhotographerDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "photographerGet",
          "pascalName": "PhotographerGet",
          "comments": [
            "@tags Photographer",
            "@name photographerGet",
            "@request GET:/api/services/app/Photographer/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Photographer/Get",
          "returnType": "PhotographerDto",
          "dependences": ["PhotographerDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "photographerUpdateMyImage",
          "pascalName": "PhotographerUpdateMyImage",
          "comments": [
            "@tags Photographer",
            "@name photographerUpdateMyImage",
            "@request PUT:/api/services/app/Photographer/UpdateMyImage"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Photographer/UpdateMyImage",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdatePhotographerDto",
          "name": "photographerUpdateMyProfile",
          "pascalName": "PhotographerUpdateMyProfile",
          "comments": [
            "@tags Photographer",
            "@name photographerUpdateMyProfile",
            "@request PUT:/api/services/app/Photographer/UpdateMyProfile"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "UpdatePhotographerDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdatePhotographerDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Photographer/UpdateMyProfile",
          "returnType": "PhotographerDto",
          "dependences": ["UpdatePhotographerDto", "PhotographerDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "AddClientDto",
          "name": "photographerAddClient",
          "pascalName": "PhotographerAddClient",
          "comments": [
            "@tags Photographer",
            "@name photographerAddClient",
            "@request POST:/api/services/app/Photographer/AddClient"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "AddClientDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "AddClientDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Photographer/AddClient",
          "returnType": "any",
          "dependences": ["AddClientDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Name?: string | null }",
          "bodyType": null,
          "name": "photographerRemoveClient",
          "pascalName": "PhotographerRemoveClient",
          "comments": [
            "@tags Photographer",
            "@name photographerRemoveClient",
            "@request DELETE:/api/services/app/Photographer/RemoveClient"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Name?: string | null }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Name?: string | null }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Photographer/RemoveClient",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ImageUrlDto",
          "name": "photographerAddPortfolioImage",
          "pascalName": "PhotographerAddPortfolioImage",
          "comments": [
            "@tags Photographer",
            "@name photographerAddPortfolioImage",
            "@request POST:/api/services/app/Photographer/AddPortfolioImage"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ImageUrlDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ImageUrlDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Photographer/AddPortfolioImage",
          "returnType": "any",
          "dependences": ["ImageUrlDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ ImageUrl: string }",
          "bodyType": null,
          "name": "photographerRemovePortfolioImage",
          "pascalName": "PhotographerRemovePortfolioImage",
          "comments": [
            "@tags Photographer",
            "@name photographerRemovePortfolioImage",
            "@request DELETE:/api/services/app/Photographer/RemovePortfolioImage"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": false,
              "type": "{ ImageUrl: string }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": false,
              "type": "{ ImageUrl: string }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Photographer/RemovePortfolioImage",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "photographerGetAll",
          "pascalName": "PhotographerGetAll",
          "comments": [
            "@tags Photographer",
            "@name photographerGetAll",
            "@request GET:/api/services/app/Photographer/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ IsMain?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Photographer/GetAll",
          "returnType": "PhotographerDtoPagedResultDto",
          "dependences": ["PhotographerDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "photographer",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "photographerDelete",
          "pascalName": "PhotographerDelete",
          "comments": [
            "@tags Photographer",
            "@name photographerDelete",
            "@request DELETE:/api/services/app/Photographer/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Photographer/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "PhotographerDto",
        "ImageUrlDto",
        "UpdatePhotographerDto",
        "AddClientDto",
        "PhotographerDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Product",
      "objName": "product",
      "routes": [
        {
          "moduleName": "product",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateProductDto",
          "name": "productCreate",
          "pascalName": "ProductCreate",
          "comments": [
            "@tags Product",
            "@name productCreate",
            "@request POST:/api/services/app/Product/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateProductDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateProductDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Product/Create",
          "returnType": "ProductDto",
          "dependences": ["CreateProductDto", "ProductDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "product",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "productGet",
          "pascalName": "ProductGet",
          "comments": [
            "@tags Product",
            "@name productGet",
            "@request GET:/api/services/app/Product/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Product/Get",
          "returnType": "ProductDto",
          "dependences": ["ProductDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "product",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ MinPrice?: number | null, MaxPrice?: number | null, SizeId?: number | null, FabricId?: number | null, DesignerId?: number | null, ColorId?: number | null, OrderId?: number | null, OnlyFavoriteProducts?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "productGetAll",
          "pascalName": "ProductGetAll",
          "comments": [
            "@tags Product",
            "@name productGetAll",
            "@request GET:/api/services/app/Product/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ MinPrice?: number | null, MaxPrice?: number | null, SizeId?: number | null, FabricId?: number | null, DesignerId?: number | null, ColorId?: number | null, OrderId?: number | null, OnlyFavoriteProducts?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ MinPrice?: number | null, MaxPrice?: number | null, SizeId?: number | null, FabricId?: number | null, DesignerId?: number | null, ColorId?: number | null, OrderId?: number | null, OnlyFavoriteProducts?: boolean | null, Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Product/GetAll",
          "returnType": "ProductDtoPagedResultDto",
          "dependences": ["ProductDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "product",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateProductDto",
          "name": "productUpdate",
          "pascalName": "ProductUpdate",
          "comments": [
            "@tags Product",
            "@name productUpdate",
            "@request PUT:/api/services/app/Product/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateProductDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateProductDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Product/Update",
          "returnType": "ProductDto",
          "dependences": ["UpdateProductDto", "ProductDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "product",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "productDelete",
          "pascalName": "ProductDelete",
          "comments": [
            "@tags Product",
            "@name productDelete",
            "@request DELETE:/api/services/app/Product/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Product/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "CreateProductDto",
        "ProductDto",
        "ProductDtoPagedResultDto",
        "UpdateProductDto"
      ]
    },
    {
      "moduleName": "Role",
      "objName": "role",
      "routes": [
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateRoleDto",
          "name": "roleCreate",
          "pascalName": "RoleCreate",
          "comments": [
            "@tags Role",
            "@name roleCreate",
            "@request POST:/api/services/app/Role/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateRoleDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateRoleDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Role/Create",
          "returnType": "RoleDto",
          "dependences": ["CreateRoleDto", "RoleDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Permission?: string | null }",
          "bodyType": null,
          "name": "roleGetRoles",
          "pascalName": "RoleGetRoles",
          "comments": [
            "@tags Role",
            "@name roleGetRoles",
            "@request GET:/api/services/app/Role/GetRoles"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Permission?: string | null }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Permission?: string | null }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Role/GetRoles",
          "returnType": "RoleListDtoListResultDto",
          "dependences": ["RoleListDtoListResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "RoleDto",
          "name": "roleUpdate",
          "pascalName": "RoleUpdate",
          "comments": [
            "@tags Role",
            "@name roleUpdate",
            "@request PUT:/api/services/app/Role/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "RoleDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": { "name": "data", "optional": false, "type": "RoleDto" },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Role/Update",
          "returnType": "RoleDto",
          "dependences": ["RoleDto", "RoleDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "roleDelete",
          "pascalName": "RoleDelete",
          "comments": [
            "@tags Role",
            "@name roleDelete",
            "@request DELETE:/api/services/app/Role/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Role/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "roleGetAllPermissions",
          "pascalName": "RoleGetAllPermissions",
          "comments": [
            "@tags Role",
            "@name roleGetAllPermissions",
            "@request GET:/api/services/app/Role/GetAllPermissions"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Role/GetAllPermissions",
          "returnType": "PermissionDtoListResultDto",
          "dependences": ["PermissionDtoListResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "roleGetRoleForEdit",
          "pascalName": "RoleGetRoleForEdit",
          "comments": [
            "@tags Role",
            "@name roleGetRoleForEdit",
            "@request GET:/api/services/app/Role/GetRoleForEdit"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Role/GetRoleForEdit",
          "returnType": "GetRoleForEditOutput",
          "dependences": ["GetRoleForEditOutput"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "roleGet",
          "pascalName": "RoleGet",
          "comments": [
            "@tags Role",
            "@name roleGet",
            "@request GET:/api/services/app/Role/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Role/Get",
          "returnType": "RoleDto",
          "dependences": ["RoleDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "role",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Keyword?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "roleGetAll",
          "pascalName": "RoleGetAll",
          "comments": [
            "@tags Role",
            "@name roleGetAll",
            "@request GET:/api/services/app/Role/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Keyword?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Keyword?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Role/GetAll",
          "returnType": "RoleDtoPagedResultDto",
          "dependences": ["RoleDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "CreateRoleDto",
        "RoleDto",
        "RoleListDtoListResultDto",
        "PermissionDtoListResultDto",
        "GetRoleForEditOutput",
        "RoleDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "Session",
      "objName": "session",
      "routes": [
        {
          "moduleName": "session",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": null,
          "queryType": "{}",
          "bodyType": null,
          "name": "sessionGetCurrentLoginInformations",
          "pascalName": "SessionGetCurrentLoginInformations",
          "comments": [
            "@tags Session",
            "@name sessionGetCurrentLoginInformations",
            "@request GET:/api/services/app/Session/GetCurrentLoginInformations"
          ],
          "routeArgs": [{ "name": "params", "optional": true, "type": "any" }],
          "specificArgs": {
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Session/GetCurrentLoginInformations",
          "returnType": "GetCurrentLoginInformationsOutput",
          "dependences": ["GetCurrentLoginInformationsOutput"],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": ["GetCurrentLoginInformationsOutput"]
    },
    {
      "moduleName": "Size",
      "objName": "size",
      "routes": [
        {
          "moduleName": "size",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "sizeGet",
          "pascalName": "SizeGet",
          "comments": [
            "@tags Size",
            "@name sizeGet",
            "@request GET:/api/services/app/Size/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Size/Get",
          "returnType": "SizeDto",
          "dependences": ["SizeDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "size",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "sizeGetAll",
          "pascalName": "SizeGetAll",
          "comments": [
            "@tags Size",
            "@name sizeGetAll",
            "@request GET:/api/services/app/Size/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Size/GetAll",
          "returnType": "SizeDtoPagedResultDto",
          "dependences": ["SizeDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "size",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateSizeDto",
          "name": "sizeCreate",
          "pascalName": "SizeCreate",
          "comments": [
            "@tags Size",
            "@name sizeCreate",
            "@request POST:/api/services/app/Size/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateSizeDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateSizeDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Size/Create",
          "returnType": "SizeDto",
          "dependences": ["CreateSizeDto", "SizeDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "size",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateSizeDto",
          "name": "sizeUpdate",
          "pascalName": "SizeUpdate",
          "comments": [
            "@tags Size",
            "@name sizeUpdate",
            "@request PUT:/api/services/app/Size/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateSizeDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateSizeDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Size/Update",
          "returnType": "SizeDto",
          "dependences": ["UpdateSizeDto", "SizeDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "size",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "sizeDelete",
          "pascalName": "SizeDelete",
          "comments": [
            "@tags Size",
            "@name sizeDelete",
            "@request DELETE:/api/services/app/Size/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Size/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "SizeDto",
        "SizeDtoPagedResultDto",
        "CreateSizeDto",
        "UpdateSizeDto"
      ]
    },
    {
      "moduleName": "Staff",
      "objName": "staff",
      "routes": [
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateUserDto",
          "name": "staffCreate",
          "pascalName": "StaffCreate",
          "comments": [
            "@tags Staff",
            "@name staffCreate",
            "@request POST:/api/services/app/Staff/Create"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "CreateUserDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateUserDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Staff/Create",
          "returnType": "UserDto",
          "dependences": ["CreateUserDto", "UserDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateUserDto",
          "name": "staffUpdate",
          "pascalName": "StaffUpdate",
          "comments": [
            "@tags Staff",
            "@name staffUpdate",
            "@request PUT:/api/services/app/Staff/Update"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "UpdateUserDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateUserDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/Staff/Update",
          "returnType": "UserDto",
          "dependences": ["UpdateUserDto", "UserDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "staffDelete",
          "pascalName": "StaffDelete",
          "comments": [
            "@tags Staff",
            "@name staffDelete",
            "@request DELETE:/api/services/app/Staff/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/Staff/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "ResetPasswordDto",
          "name": "staffResetPassword",
          "pascalName": "StaffResetPassword",
          "comments": [
            "@tags Staff",
            "@name staffResetPassword",
            "@request POST:/api/services/app/Staff/ResetPassword"
          ],
          "routeArgs": [
            { "name": "data", "optional": false, "type": "ResetPasswordDto" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "ResetPasswordDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/Staff/ResetPassword",
          "returnType": "boolean",
          "dependences": ["ResetPasswordDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "staffGet",
          "pascalName": "StaffGet",
          "comments": [
            "@tags Staff",
            "@name staffGet",
            "@request GET:/api/services/app/Staff/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Staff/Get",
          "returnType": "UserDto",
          "dependences": ["UserDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "staff",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Keyword?: string | null, IsActive?: boolean | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "staffGetAll",
          "pascalName": "StaffGetAll",
          "comments": [
            "@tags Staff",
            "@name staffGetAll",
            "@request GET:/api/services/app/Staff/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Keyword?: string | null, IsActive?: boolean | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Keyword?: string | null, IsActive?: boolean | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/Staff/GetAll",
          "returnType": "UserDtoPagedResultDto",
          "dependences": ["UserDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "CreateUserDto",
        "UserDto",
        "UpdateUserDto",
        "ResetPasswordDto",
        "UserDtoPagedResultDto"
      ]
    },
    {
      "moduleName": "StaticContent",
      "objName": "staticContent",
      "routes": [
        {
          "moduleName": "staticContent",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "staticContentGet",
          "pascalName": "StaticContentGet",
          "comments": [
            "@tags StaticContent",
            "@name staticContentGet",
            "@request GET:/api/services/app/StaticContent/Get"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/StaticContent/Get",
          "returnType": "StaticContentDto",
          "dependences": ["StaticContentDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "staticContent",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }",
          "bodyType": null,
          "name": "staticContentGetAll",
          "pascalName": "StaticContentGetAll",
          "comments": [
            "@tags StaticContent",
            "@name staticContentGetAll",
            "@request GET:/api/services/app/StaticContent/GetAll"
          ],
          "routeArgs": [
            {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Sorting?: string | null, SkipCount?: number, MaxResultCount?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "get",
          "path": "/api/services/app/StaticContent/GetAll",
          "returnType": "StaticContentDtoPagedResultDto",
          "dependences": ["StaticContentDtoPagedResultDto"],
          "errorReturnType": "any",
          "bodyArg": "null"
        },
        {
          "moduleName": "staticContent",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "CreateStaticContentDto",
          "name": "staticContentCreate",
          "pascalName": "StaticContentCreate",
          "comments": [
            "@tags StaticContent",
            "@name staticContentCreate",
            "@request POST:/api/services/app/StaticContent/Create"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "CreateStaticContentDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "CreateStaticContentDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "post",
          "path": "/api/services/app/StaticContent/Create",
          "returnType": "StaticContentDto",
          "dependences": ["CreateStaticContentDto", "StaticContentDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "staticContent",
          "security": false,
          "hasQuery": false,
          "hasFormDataParams": false,
          "queryType": "{}",
          "bodyType": "UpdateStaticContentDto",
          "name": "staticContentUpdate",
          "pascalName": "StaticContentUpdate",
          "comments": [
            "@tags StaticContent",
            "@name staticContentUpdate",
            "@request PUT:/api/services/app/StaticContent/Update"
          ],
          "routeArgs": [
            {
              "name": "data",
              "optional": false,
              "type": "UpdateStaticContentDto"
            },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "body": {
              "name": "data",
              "optional": false,
              "type": "UpdateStaticContentDto"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "put",
          "path": "/api/services/app/StaticContent/Update",
          "returnType": "StaticContentDto",
          "dependences": ["UpdateStaticContentDto", "StaticContentDto"],
          "errorReturnType": "any",
          "bodyArg": "data"
        },
        {
          "moduleName": "staticContent",
          "security": false,
          "hasQuery": true,
          "hasFormDataParams": null,
          "queryType": "{ Id?: number }",
          "bodyType": null,
          "name": "staticContentDelete",
          "pascalName": "StaticContentDelete",
          "comments": [
            "@tags StaticContent",
            "@name staticContentDelete",
            "@request DELETE:/api/services/app/StaticContent/Delete"
          ],
          "routeArgs": [
            { "name": "query", "optional": true, "type": "{ Id?: number }" },
            { "name": "params", "optional": true, "type": "any" }
          ],
          "specificArgs": {
            "query": {
              "name": "query",
              "optional": true,
              "type": "{ Id?: number }"
            },
            "requestParams": {
              "name": "params",
              "optional": true,
              "type": "any"
            }
          },
          "method": "delete",
          "path": "/api/services/app/StaticContent/Delete",
          "returnType": "any",
          "dependences": [],
          "errorReturnType": "any",
          "bodyArg": "null"
        }
      ],
      "dependences": [
        "StaticContentDto",
        "StaticContentDtoPagedResultDto",
        "CreateStaticContentDto",
        "UpdateStaticContentDto"
      ]
    }
  ]
}
